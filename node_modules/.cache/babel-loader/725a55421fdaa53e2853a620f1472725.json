{"ast":null,"code":"var _jsxFileName = \"/Users/groovequeen/Desktop/photoapp-clone/src/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport FlipMove from 'react-flip-move';\nimport './Feed.css';\nimport InputOption from './InputOption';\nimport CreateIcon from '@material-ui/icons/Create';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport Post from './Post'; // import db from local db\n\nimport { db } from './Firebase';\nimport Firebase from './Firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice'; // useState = Hook // RE-EXPLAIN 2:20\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Feed() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState('');\n  const [posts, setPosts] = useState([]); //! useEffect hook allows us to fire off code when the Feed component loads. \n  //! It also allows us to fire off whatever the component re-renders if we don't pass a second argument.\n  //! If we pass on a blank dependency like [empty array] in line 21, then it will fire off once the feed component loads but it will never fire off again after that \n\n  useEffect(() => {\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => setPosts(snapshot.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    })))); //real time posts collection when posts are add/deleted\n  }, []); // addLike(() => {}\n  // prevent refreshing\n\n  const sendPost = e => {\n    e.preventDefault();\n    db.collection('posts').add({\n      name: user.displayName,\n      description: user.email,\n      likes: [],\n      message: input,\n      photoURL: user.photoUrl || '',\n      timestamp: Firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed_inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed_input\",\n        children: [/*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            type: \"text\",\n            placeholder: \"Share a post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendPost,\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed_inputOptions\",\n        children: [/*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ImageIcon,\n          title: \"Photo\",\n          color: \"#70B5F9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: SubscriptionsIcon,\n          title: \"Video\",\n          color: \"#E7A33E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: EventNoteIcon,\n          title: \"Event\",\n          color: \"#70B5F9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: CalendarViewDayIcon,\n          title: \"Write article\",\n          color: \"#7FC15E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n      children: posts.map(({\n        id,\n        data: {\n          name,\n          description,\n          likes,\n          message,\n          photoURL\n        }\n      }) => /*#__PURE__*/_jsxDEV(Post, {\n        name: name,\n        description: description,\n        likes: likes,\n        message: message,\n        photoURL: photoURL\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Feed, \"K8dIafYe2x7cNy0bztNnfcYTiPQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/groovequeen/Desktop/photoapp-clone/src/Feed.js"],"names":["React","useEffect","useState","FlipMove","InputOption","CreateIcon","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Post","db","Firebase","useSelector","selectUser","Feed","user","input","setInput","posts","setPosts","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","sendPost","e","preventDefault","add","name","displayName","description","email","likes","message","photoURL","photoUrl","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport FlipMove from 'react-flip-move'\nimport './Feed.css'\nimport InputOption from './InputOption'\nimport CreateIcon from '@material-ui/icons/Create';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport Post from './Post';\n// import db from local db\nimport { db } from './Firebase'\nimport Firebase from './Firebase'\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\n\n// useState = Hook // RE-EXPLAIN 2:20\nfunction Feed() {\n const user = useSelector(selectUser);\n const [input, setInput] = useState('');\n const [posts, setPosts] = useState([]);\n \n //! useEffect hook allows us to fire off code when the Feed component loads. \n //! It also allows us to fire off whatever the component re-renders if we don't pass a second argument.\n //! If we pass on a blank dependency like [empty array] in line 21, then it will fire off once the feed component loads but it will never fire off again after that \n useEffect(() => {\n    db.collection('posts')\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => \n        setPosts(\n            snapshot.docs.map((doc) => ({\n                id: doc.id,\n                data: doc.data(),\n            }))\n        )\n    );//real time posts collection when posts are add/deleted\n}, []);\n\n// addLike(() => {}\n\n    // prevent refreshing\n    const sendPost = e => {\n        e.preventDefault();\n        db.collection('posts').add({\n            name: user.displayName,\n            description: user.email,\n            likes:[],\n            message: input,\n            photoURL: user.photoUrl || '',\n            timestamp: Firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setInput('');\n    };\n\n    return <div className='feed'>\n        <div className='feed_inputContainer'>\n            <div className=\"feed_input\">\n                <CreateIcon />\n                <form>\n                    <input value={input} onChange={e => setInput(e.target.value)} type='text' placeholder='Share a post'/>\n                    <button onClick={sendPost} type='submit'>Send</button>\n                </form>\n            </div>\n            <div className='feed_inputOptions'>\n                {/* Here I am reusing InputOption component that I created for Header.js  */}\n                <InputOption Icon={ImageIcon} title='Photo' color='#70B5F9' />\n                <InputOption Icon={SubscriptionsIcon} title='Video' color='#E7A33E' />\n                <InputOption Icon={EventNoteIcon} title='Event' color='#70B5F9' />\n                <InputOption \n                 Icon={CalendarViewDayIcon}\n                 title='Write article'\n                 color= '#7FC15E' />\n            </div>\n        </div>\n\n        {/* Posts will be rendered here as they come in */}\n        <FlipMove>\n        {/* every time I have a post I render it on the browser */}\n        {posts.map(({id, data: {name, description, likes, message, photoURL}}) => (\n            <Post \n                key={id}\n                name={name}\n                description={description}\n                likes={likes}\n                message={message}\n                photoURL={photoURL}\n            />\n        ))}\n        </FlipMove>\n        </div>\n}\n\nexport default Feed\n"]},"metadata":{},"sourceType":"module"}