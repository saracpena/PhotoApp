{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';// storing user information\nexport var userSlice=createSlice({name:'user',initialState:{user:null},reducers:{login:function login(state,action){state.user=action.payload;},logout:function logout(state){state.user=null;}}});var _userSlice$actions=userSlice.actions,login=_userSlice$actions.login,logout=_userSlice$actions.logout;//! Selectors\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport{login,logout};export var selectUser=function selectUser(state){return state.user.user;};export default userSlice.reducer;//! Redux:\n// REWATCH 2:30 REDUX BROKEN DOWN! Take notes and articulate this! i.e.SLICE","map":{"version":3,"sources":["/Users/groovequeen/Desktop/photoapp-clone/src/features/userSlice.js"],"names":["createSlice","userSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAGD,WAAW,CAAC,CACnCE,IAAI,CAAE,MAD6B,CAEnCC,YAAY,CAAE,CACZC,IAAI,CAAE,IADM,CAFqB,CAKnCC,QAAQ,CAAE,CACRC,KAAK,CAAE,eAACC,KAAD,CAAQC,MAAR,CAAmB,CACxBD,KAAK,CAACH,IAAN,CAAaI,MAAM,CAACC,OAApB,CACD,CAHO,CAIRC,MAAM,CAAE,gBAACH,KAAD,CAAW,CACjBA,KAAK,CAACH,IAAN,CAAa,IAAb,CACD,CANO,CALyB,CAAD,CAA7B,C,uBAe0BH,SAAS,CAACU,O,CAA5BL,K,oBAAAA,K,CAAOI,M,oBAAAA,M,CAEtB;AACA;AACA;AACA;qBACA,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,KAAD,QAAWA,CAAAA,KAAK,CAACH,IAAN,CAAWA,IAAtB,EAAnB,CAEP,cAAeH,CAAAA,SAAS,CAACY,OAAzB,CAEA;AACA","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// storing user information\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n//! Selectors\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n\r\n//! Redux:\r\n// REWATCH 2:30 REDUX BROKEN DOWN! Take notes and articulate this! i.e.SLICE\r\n"]},"metadata":{},"sourceType":"module"}