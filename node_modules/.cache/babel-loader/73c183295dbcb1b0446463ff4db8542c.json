{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // storing user information\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n    },\n    logout: state => {\n      state.user = null;\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = userSlice.actions; //! Selectors\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectUser = state => state.user.user;\nexport default userSlice.reducer; //! Redux:\n// REWATCH 2:30 REDUX BROKEN DOWN! Take notes and articulate this! i.e.SLICE","map":{"version":3,"sources":["/Users/groovequeen/Desktop/photoapp-clone/src/features/userSlice.js"],"names":["createSlice","userSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,MAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM,GAFqB;AAKnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACH,IAAN,GAAaI,MAAM,CAACC,OAApB;AACD,KAHO;AAIRC,IAAAA,MAAM,EAAGH,KAAD,IAAW;AACjBA,MAAAA,KAAK,CAACH,IAAN,GAAa,IAAb;AACD,KANO;AAORM,IAAAA,MAAM,EAAGH,KAAD,IAAW;AACjBA,MAAAA,KAAK,CAACH,IAAN,GAAa,IAAb;AACD;AATO;AALyB,CAAD,CAA7B;AAkBP,OAAO,MAAM;AAAEE,EAAAA,KAAF;AAASI,EAAAA;AAAT,IAAoBT,SAAS,CAACU,OAApC,C,CAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAIL,KAAD,IAAWA,KAAK,CAACH,IAAN,CAAWA,IAAzC;AAEP,eAAeH,SAAS,CAACY,OAAzB,C,CAEA;AACA","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// storing user information\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n//! Selectors\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n\r\n//! Redux:\r\n// REWATCH 2:30 REDUX BROKEN DOWN! Take notes and articulate this! i.e.SLICE\r\n"]},"metadata":{},"sourceType":"module"}