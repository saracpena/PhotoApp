{"ast":null,"code":"// [] is representing my Store i.e. data\n// When dealing with multiple action types\nimport * as actions from \"./actions/actionTypes\";\nexport const initialState = {\n  users: users,\n  pictures: pictures\n};\nexport default function reducer(state = [], action) {\n  switch (action.type) {\n    case actions.USER_ADDED:\n      return [...state, {\n        id: ++lastId,\n        description: action.payload.description,\n        new: true\n      }];\n\n    case actions.USER_REMOVED:\n      return store.filter(user => user.item !== action.payload.item);\n\n    case actions.USER_LOGIN:\n      return state.map(user => user.item !== action.payload.id ? user : { ...user,\n        login: false\n      });\n\n    case actions.USER_LOGOUT:\n      return state.map(user => user.id !== action.payload.id ? user : { ...user,\n        login: true\n      });\n\n    case actions.ADD_COMMENT:\n      return state.map(user => user.id !== action.payload.id ? user : { ...user,\n        login: true\n      });\n\n    case actions.REMOVE_COMMENT:\n      return state.map(user => user.id !== action.payload.id ? user : { ...user,\n        login: true\n      });\n\n    case actions.ADD_PHOTO:\n      return state.map(user => user.id !== action.payload.id ? user : { ...user,\n        login: true\n      });\n\n    case actions.REMOVE_PHOTO:\n      return state.map(user => user.id !== action.payload.id ? user : { ...user,\n        login: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/groovequeen/Desktop/photo_app/src/redux/Reducers.js"],"names":["actions","initialState","users","pictures","reducer","state","action","type","USER_ADDED","id","lastId","description","payload","new","USER_REMOVED","store","filter","user","item","USER_LOGIN","map","login","USER_LOGOUT","ADD_COMMENT","REMOVE_COMMENT","ADD_PHOTO","REMOVE_PHOTO"],"mappings":"AAAA;AACA;AACA,OAAO,KAAKA,OAAZ,MAAyB,uBAAzB;AAIA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAGA,KADkB;AAE1BC,EAAAA,QAAQ,EAAEA;AAFgB,CAArB;AAKP,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAG,EAAzB,EAA6BC,MAA7B,EAAqC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAO,CAACQ,UAAb;AACE,aAAO,CACL,GAAGH,KADE,EAEL;AACEI,QAAAA,EAAE,EAAE,EAAEC,MADR;AAEEC,QAAAA,WAAW,EAAEL,MAAM,CAACM,OAAP,CAAeD,WAF9B;AAGEE,QAAAA,GAAG,EAAE;AAHP,OAFK,CAAP;;AAQF,SAAKb,OAAO,CAACc,YAAb;AACE,aAAOC,KAAK,CAACC,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcZ,MAAM,CAACM,OAAP,CAAeM,IAApD,CAAP;;AAEF,SAAKlB,OAAO,CAACmB,UAAb;AACE,aAAOd,KAAK,CAACe,GAAN,CAAWH,IAAD,IACfA,IAAI,CAACC,IAAL,KAAcZ,MAAM,CAACM,OAAP,CAAeH,EAA7B,GAAkCQ,IAAlC,GAAyC,EAAE,GAAGA,IAAL;AAAWI,QAAAA,KAAK,EAAE;AAAlB,OADpC,CAAP;;AAIF,SAAKrB,OAAO,CAACsB,WAAb;AACE,aAAOjB,KAAK,CAACe,GAAN,CAAWH,IAAD,IACfA,IAAI,CAACR,EAAL,KAAYH,MAAM,CAACM,OAAP,CAAeH,EAA3B,GAAgCQ,IAAhC,GAAuC,EAAE,GAAGA,IAAL;AAAWI,QAAAA,KAAK,EAAE;AAAlB,OADlC,CAAP;;AAGF,SAAKrB,OAAO,CAACuB,WAAb;AACE,aAAOlB,KAAK,CAACe,GAAN,CAAWH,IAAD,IACfA,IAAI,CAACR,EAAL,KAAYH,MAAM,CAACM,OAAP,CAAeH,EAA3B,GAAgCQ,IAAhC,GAAuC,EAAE,GAAGA,IAAL;AAAWI,QAAAA,KAAK,EAAE;AAAlB,OADlC,CAAP;;AAGF,SAAKrB,OAAO,CAACwB,cAAb;AACE,aAAOnB,KAAK,CAACe,GAAN,CAAWH,IAAD,IACfA,IAAI,CAACR,EAAL,KAAYH,MAAM,CAACM,OAAP,CAAeH,EAA3B,GAAgCQ,IAAhC,GAAuC,EAAE,GAAGA,IAAL;AAAWI,QAAAA,KAAK,EAAE;AAAlB,OADlC,CAAP;;AAGF,SAAKrB,OAAO,CAACyB,SAAb;AACE,aAAOpB,KAAK,CAACe,GAAN,CAAWH,IAAD,IACfA,IAAI,CAACR,EAAL,KAAYH,MAAM,CAACM,OAAP,CAAeH,EAA3B,GAAgCQ,IAAhC,GAAuC,EAAE,GAAGA,IAAL;AAAWI,QAAAA,KAAK,EAAE;AAAlB,OADlC,CAAP;;AAGF,SAAKrB,OAAO,CAAC0B,YAAb;AACE,aAAOrB,KAAK,CAACe,GAAN,CAAWH,IAAD,IACfA,IAAI,CAACR,EAAL,KAAYH,MAAM,CAACM,OAAP,CAAeH,EAA3B,GAAgCQ,IAAhC,GAAuC,EAAE,GAAGA,IAAL;AAAWI,QAAAA,KAAK,EAAE;AAAlB,OADlC,CAAP;;AAGF;AACE,aAAOhB,KAAP;AAvCJ;AAyCD","sourcesContent":["// [] is representing my Store i.e. data\n// When dealing with multiple action types\nimport * as actions from \"./actions/actionTypes\";\n\n\n\nexport const initialState = {\n  users : users,\n  pictures: pictures\n}\n\nexport default function reducer(state = [], action) {\n  switch (action.type) {\n    case actions.USER_ADDED:\n      return [\n        ...state,\n        {\n          id: ++lastId,\n          description: action.payload.description,\n          new: true,\n        },\n      ];\n    case actions.USER_REMOVED:\n      return store.filter((user) => user.item !== action.payload.item);\n\n    case actions.USER_LOGIN:\n      return state.map((user) =>\n        user.item !== action.payload.id ? user : { ...user, login: false }\n      );\n\n    case actions.USER_LOGOUT:\n      return state.map((user) =>\n        user.id !== action.payload.id ? user : { ...user, login: true }\n      );\n    case actions.ADD_COMMENT:\n      return state.map((user) =>\n        user.id !== action.payload.id ? user : { ...user, login: true }\n      );\n    case actions.REMOVE_COMMENT:\n      return state.map((user) =>\n        user.id !== action.payload.id ? user : { ...user, login: true }\n      );\n    case actions.ADD_PHOTO:\n      return state.map((user) =>\n        user.id !== action.payload.id ? user : { ...user, login: true }\n      );\n    case actions.REMOVE_PHOTO:\n      return state.map((user) =>\n        user.id !== action.payload.id ? user : { ...user, login: true }\n      );\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}