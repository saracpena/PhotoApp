[{"/Users/groovequeen/Desktop/photoapp-clone/src/index.js":"1","/Users/groovequeen/Desktop/Photo_App/src/index.js":"2","/Users/groovequeen/Desktop/Photo_App/src/serviceWorker.js":"3","/Users/groovequeen/Desktop/Photo_App/src/app/store.js":"4","/Users/groovequeen/Desktop/Photo_App/src/app/App.js":"5","/Users/groovequeen/Desktop/Photo_App/src/Login.js":"6","/Users/groovequeen/Desktop/Photo_App/src/Widgets.js":"7","/Users/groovequeen/Desktop/Photo_App/src/Settings.js":"8","/Users/groovequeen/Desktop/Photo_App/src/Feed.js":"9","/Users/groovequeen/Desktop/Photo_App/src/Firebase.js":"10","/Users/groovequeen/Desktop/Photo_App/src/Likes.js":"11","/Users/groovequeen/Desktop/Photo_App/src/Sidebar.js":"12","/Users/groovequeen/Desktop/Photo_App/src/Header.js":"13","/Users/groovequeen/Desktop/Photo_App/src/features/userSlice.js":"14","/Users/groovequeen/Desktop/Photo_App/src/HeaderOption.js":"15","/Users/groovequeen/Desktop/Photo_App/src/Post.js":"16","/Users/groovequeen/Desktop/Photo_App/src/InputOption.js":"17","/Users/groovequeen/Desktop/Photo_App/src/components/LikeButton.js":"18"},{"size":652,"mtime":1612768201306,"results":"19","hashOfConfig":"20"},{"size":658,"mtime":1612933400738,"results":"21","hashOfConfig":"22"},{"size":5141,"mtime":1612409761221,"results":"23","hashOfConfig":"24"},{"size":267,"mtime":1612829896270,"results":"25","hashOfConfig":"22"},{"size":1972,"mtime":1612900083139,"results":"26","hashOfConfig":"22"},{"size":3467,"mtime":1612832488449,"results":"27","hashOfConfig":"22"},{"size":979,"mtime":1612755570979,"results":"28","hashOfConfig":"22"},{"size":1231,"mtime":1612818949603,"results":"29","hashOfConfig":"22"},{"size":5344,"mtime":1612898487766,"results":"30","hashOfConfig":"22"},{"size":968,"mtime":1612827176654,"results":"31","hashOfConfig":"22"},{"size":2211,"mtime":1612893819718,"results":"32","hashOfConfig":"22"},{"size":2071,"mtime":1612589633367,"results":"33","hashOfConfig":"22"},{"size":1988,"mtime":1612833900396,"results":"34","hashOfConfig":"22"},{"size":935,"mtime":1612893224476,"results":"35","hashOfConfig":"22"},{"size":1097,"mtime":1612754434918,"results":"36","hashOfConfig":"22"},{"size":1573,"mtime":1612898636428,"results":"37","hashOfConfig":"22"},{"size":567,"mtime":1612590324286,"results":"38","hashOfConfig":"22"},{"size":1307,"mtime":1612840269552,"results":"39","hashOfConfig":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kx6p8h",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sud3u0",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ltioy",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},"/Users/groovequeen/Desktop/photoapp-clone/src/index.js",[],"/Users/groovequeen/Desktop/Photo_App/src/index.js",[],"/Users/groovequeen/Desktop/Photo_App/src/serviceWorker.js",[],"/Users/groovequeen/Desktop/Photo_App/src/app/store.js",[],["82","83"],"/Users/groovequeen/Desktop/Photo_App/src/app/App.js",["84"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch as RouterSwitch, Route } from 'react-router-dom'\r\n//CSS\r\nimport './App.css';\r\n// Components\r\nimport Login from '../Login'\r\nimport Header from '../Header';\r\nimport Sidebar from '../Sidebar';\r\nimport Feed from '../Feed'\r\nimport Widgets from '../Widgets'\r\nimport Likes from '../Likes'\r\nimport Settings from '../Settings';\r\n//\r\nimport { login, logout, selectUser } from '../features/userSlice';\r\nimport { auth } from '../Firebase'\r\n\r\n\r\n\r\nfunction App() {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch(); \r\n\r\n    useEffect(() => {\r\n//! onAuth() is a firebase () 'listener' that listens to any authentication changes\r\n      auth.onAuthStateChanged((userAuth) => {\r\n        if (userAuth) {\r\n          // then the user is logged in\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName,\r\n            photoUrl: userAuth.photoURL, \r\n        })\r\n        );//! Otherwise, the user is logged out\r\n        } else {\r\n          \r\n    //! dispatching reducer from userSlice.js\r\n        dispatch(logout());\r\n      }\r\n    });\r\n    }, []);\r\n    \r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n      <Header />\r\n{/* TERNARY !user ? :Login- ----if there is no user, I want to render the Login page, otherwise render the app */}\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className='app_body'>\r\n        <Sidebar />  \r\n      <RouterSwitch>\r\n          <Route exact path='/'>\r\n            <Feed />\r\n          </Route>\r\n          <Route path='/Likes'>\r\n            <Likes />\r\n          </Route>\r\n          <Route>\r\n            <Settings />\r\n          </Route>\r\n      </RouterSwitch>   \r\n          <Widgets />\r\n      </div>\r\n      )}\r\n      </Router>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/Users/groovequeen/Desktop/Photo_App/src/Login.js",[],"/Users/groovequeen/Desktop/Photo_App/src/Widgets.js",[],"/Users/groovequeen/Desktop/Photo_App/src/Settings.js",["85","86"],"import { CallToActionSharp } from '@material-ui/icons';\n// CSS\nimport './Settings.css'\n// React Redux\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { firestore } from 'firebase'\n\nfunction Settings() {\nconnect(\n    // Map to props\n    ({firebase: { auth, profile }}) => ({\n        auth,\n        profile\n    })\n)\n// export const deleteUser = () => async (\n//     dispatch, \n//     getState, \n//     {getFirebase, getFirestore} \n//     => {\n//     const firebase = getFirebase();\n//     const firestore = getFirestore();\n\n//     try {\n\n//     }catch(err) {\n//        dispatch(type: actions.deleteUser)\n//     }\n// });\n\n// user.delete().then(){\n    \n// }\n\n    return (\n        <div className='updateprofile'>\n        <img src='' alt=''/> \n        <p className='heading'>U P D A T E &nbsp; P R O F I L E</p>\n        <form className='form'>\n            <input  placeholder='Full Name' type='email'/>\n            <input placeholder='Profile pic URL (optional)' type='email'/>\n            <input  placeholder='Email' type='email'/>\n            <input  placeholder='Password' type='password'/>\n            <button type='submit' >Delete Account</button>\n        </form>\n      </div>\n    )\n}\n\nexport default Settings\n","/Users/groovequeen/Desktop/Photo_App/src/Feed.js",[],"/Users/groovequeen/Desktop/Photo_App/src/Firebase.js",[],"/Users/groovequeen/Desktop/Photo_App/src/Likes.js",["87","88"],"import React, { useState, useEffect } from 'react'\n// React Animation\nimport FlipMove from 'react-flip-move'\n// CSS\nimport './Likes.css'\n\n// import db from local db\nimport Post from './Post'\nimport { db } from './Firebase'\nimport Firebase from './Firebase'\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\n\n\nconst Likes = () => {\n    //! instead of using class component I used a function component and used useState to hook it to\n    // class Likes extends React.Component {\n    //     constructor(props) {\n    //       super(props);\n    //       this.state = {\n    //         posts,\n    //         userId\n    //       };\n    //     }\n\n// const user = useSelector(selectUser);\nconst [posts, setPosts] = useState([]);\nconst userId = useSelector(selectUser).uid;\n\nuseEffect(() => {\n    db.collection('posts')\n      .where('likes','array-contains', userId)\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => \n        setPosts(\n            snapshot.docs.map((doc) => ({\n                id: doc.id,\n                data: doc.data(),\n            }))\n        )\n    );//real time posts collection when posts are add/deleted\n}, []);\n\n// Query db firestore of UIDs get all posts that have current users UID in their likes array\n\n\n    \n    return (\n        <div className='likes-navlink'>\n         <div className='feed_inputContainer'>Some of my Favorite Posts</div>\n            <div className=\"feed_input\"></div>\n            <FlipMove>\n            {posts.map(({id, data: {name, description, likes, message, photoURL}}) => {\n            const likeStatus =(likes || []).includes(userId);\n            return (\n            <Post \n                key={id}\n// https://reactjs.org/warnings/special-props.html#:~:text=Most%20props%20on%20a%20JSX,not%20forwarded%20to%20the%20component\n                id={id}\n                name={name}\n                likeStatus={likeStatus}\n                description={description}\n                likes={likes}\n                message={message}\n                photoURL={photoURL}\n            />)\n        })}\n            <div className='feed_inputOptions'></div>\n        </FlipMove>\n        </div>\n    )\n}\n\nexport default Likes\n","/Users/groovequeen/Desktop/Photo_App/src/Sidebar.js",["89","90","91","92"],"import React from 'react'\nimport './Sidebar.css'\nimport { Avatar } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from './features/userSlice'\n\nfunction Sidebar() {\n    // access user information\n    const user = useSelector(selectUser); \n\n    // Render JSX in the \"recents' section with this function bypassing a need for another component\n    const recentItem = (topic) => (\n        <div className='sidebar_recentItem'>\n            <span className='sidebar_hash'>#</span>\n            <p>{topic}</p>\n        </div>\n    )\n    return (\n        <div className='sidebar'>\n            <div className='sidebar_top'>\n                <img src='https://www.teahub.io/photos/full/13-137497_this-high-quality-free-png-image-without-any.jpg' alt='' />\n                {/* if user does not have an image we can render the first initial of their name */}\n                <Avatar src={user.photoUrl} className='sidebar_avatar'>{ user?.displayName[0]}</Avatar>\n                <h3>{user.displayName}</h3>\n                <h5>{user.email}</h5>\n            </div>\n\n            <div className='sidebar_stats'>\n                <div className='sidebar_stat'>\n                    <p>Who viewed you?</p>\n                    <p className='sidebar_statNumber'>1.4M</p>\n                </div>\n                <div className='sidebar_stat'>\n                    <p>Views on post</p>\n                    <p className='sidebar_statNumber'>1.4M</p>\n                </div>\n            </div>\n\n            <div className='sidebar_bottom'>\n                <p>Recent</p>\n                <a href='https://photo-app-clone.web.app/'target=\"_blank\">{recentItem ('PhotoApp')}</a>\n                <a href='https://mini-synth.herokuapp.com//'target=\"_blank\">{recentItem ('MiniSynth')}</a>\n                <a href='https://www.linkedin.com/in/scristalp/'target=\"_blank\">{recentItem ('LinkedIn Profile')}</a>\n                <a href='https://github.com/saracpena'target=\"_blank\">{recentItem ('GitHub')}</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","/Users/groovequeen/Desktop/Photo_App/src/Header.js",[],"/Users/groovequeen/Desktop/Photo_App/src/features/userSlice.js",[],"/Users/groovequeen/Desktop/Photo_App/src/HeaderOption.js",[],"/Users/groovequeen/Desktop/Photo_App/src/Post.js",[],"/Users/groovequeen/Desktop/Photo_App/src/InputOption.js",[],"/Users/groovequeen/Desktop/Photo_App/src/components/LikeButton.js",["93","94"],"import { ColorizeSharp } from '@material-ui/icons';\nimport React, { useState } from 'react'\nimport InputOption from '../InputOption'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/userSlice';\nimport firebase from '../Firebase'\nimport { db } from '../Firebase'\nimport { auth } from '../Firebase';\n\nfunction LikeButton({ id, likeStatus }){\n    \nconst [likes, setLikes] = useState(likeStatus)\nconst userId = useSelector(selectUser).uid;\nconsole.log('In like btn', likeStatus);\n\nconst toggleLike = () => {\n    console.log('toggleLike');\n    console.log('AddRemoveLike', userId);\n    console.log(id);\nconst likedPost = db.collection('posts').doc(id);\n    if(!likes){\n        likedPost.update({\n        likes: firebase.firestore.FieldValue.arrayUnion(userId)\n        })\n    console.log();\n    }else {\n        likedPost.update({\n        likes: firebase.firestore.FieldValue.arrayRemove(userId)\n        })\n    }\nconsole.log(likedPost);\n    setLikes(!likes)\n}\n\nconst color = likes ?'blue':'grey';\n\n       return (\n            <div className='like-btn' onClick={toggleLike}> \n                <InputOption Icon={ThumbUpAltIcon} title='Like' color={color}/> \n            </div>\n          ) \n    }\nexport default LikeButton\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":43,"column":8,"nodeType":"101","endLine":43,"endColumn":10,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":27},{"ruleId":"103","severity":1,"message":"107","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":19},{"ruleId":"103","severity":1,"message":"108","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":16},{"ruleId":"99","severity":1,"message":"109","line":42,"column":4,"nodeType":"101","endLine":42,"endColumn":6,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":41,"column":17,"nodeType":"113","endLine":41,"endColumn":75},{"ruleId":"111","severity":1,"message":"112","line":42,"column":17,"nodeType":"113","endLine":42,"endColumn":77},{"ruleId":"111","severity":1,"message":"112","line":43,"column":17,"nodeType":"113","endLine":43,"endColumn":81},{"ruleId":"111","severity":1,"message":"112","line":44,"column":17,"nodeType":"113","endLine":44,"endColumn":71},{"ruleId":"103","severity":1,"message":"114","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":23},{"ruleId":"103","severity":1,"message":"115","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":14},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["118"],"no-unused-vars","'CallToActionSharp' is defined but never used.","Identifier","unusedVar","'firestore' is defined but never used.","'Firebase' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["119"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'ColorizeSharp' is defined but never used.","'auth' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [dispatch]",{"range":"124","text":"125"},"Update the dependencies array to be: [userId]",{"range":"126","text":"127"},[1285,1287],"[dispatch]",[1182,1184],"[userId]"]