{"version":3,"sources":["Firebase.js","features/userSlice.js","Login.js","HeaderOption.js","Header.js","Sidebar.js","InputOption.js","Post.js","Feed.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Login","useState","setName","profilePic","setProfilePic","email","setEmail","password","setPassword","dispatch","useDispatch","className","src","alt","value","onChange","e","target","placeholder","type","onClick","preventDefault","signInWithEmailAndPassword","then","userAuth","uid","displayName","photoUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","HeaderOption","avatar","Icon","title","useSelector","Avatar","Header","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltIcon","ShareIcon","SendIcon","Feed","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","add","timestamp","Firebase","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.258f1ea2.chunk.js","sourcesContent":["// First install 'npm add firebase' firebase is a dependency\nimport firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyABlexnsrKC3x9R4rMj_gl7ZLOKF_EjHRs\",\n    authDomain: \"photo-app-clone.firebaseapp.com\",\n    projectId: \"photo-app-clone\",\n    storageBucket: \"photo-app-clone.appspot.com\",\n    messagingSenderId: \"763322424128\",\n    appId: \"1:763322424128:web:17654c866d32fa645638a5\",\n    measurementId: \"G-LRM78XGGSP\"\n  };\n\n//! the following 'firebaseApp' connects/sets up our firebase, thus passing the 'firebaseConfig'\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n//! access to firebase database\nconst db = firebaseApp.firestore();\n//! access to firebase authentication\nconst auth = firebase.auth();\n\n// makes them accessible \nexport { db, auth };\nexport default firebase","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// storing user information\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n//! Selectors\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n\r\n//! Redux:\r\n// REWATCH 2:30 REDUX BROKEN DOWN! Take notes and articulate this! i.e.SLICE\r\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { auth } from './Firebase';\nimport { login } from './features/userSlice'\nimport './Login.css'\n\nfunction Login() {\n\n    const [name, setName] = useState('');\n    const [profilePic, setProfilePic] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n    // const [name, setName] = useState(''); for registering\n\n    const loginToApp = (e) => {\n        e.preventDefault();\n\n        auth.signInWithEmailAndPassword(email, password)\n         .then(userAuth => {\n             dispatch(\n               login({\n                 email: userAuth.user.email,\n                 uid: userAuth.user.uid,\n                 displayName: userAuth.user.displayName,\n                 photoUrl: userAuth.user.photoURL \n             })\n            );\n         })\n         .catch((error) => alert(error));\n    };\n    const register = () => {\n        if(!name){\n            return alert(\"Please enter full name\");\n        }\n\n        auth.createUserWithEmailAndPassword(email, password).then(\n            (userAuth) => {\n              userAuth.user\n                .updateProfile({\n                 displayName: name,\n                 photoURL: profilePic,\n              })\n              .then(() => {\n                dispatch(login({\n                    email: userAuth.user.email,\n                    uid: userAuth.user.uid,\n                    displayName: name,\n                    photoUrl: profilePic    \n                }));\n            });\n        }).catch(error => alert(error));\n    };\n    \n    return (\n    <div className='login'>\n      <img src='https://news.hitb.org/sites/default/files/styles/large/public/field/image/500px-LinkedIn_Logo.svg_1.png?itok=q_lR0Vks' alt=''\n        /> \n    \n      <form>\n          <input value={name} onChange={e => setName(e.target.value)} placeholder='Full Name' type='email'/>\n          <input value={profilePic} onChange={e => setProfilePic(e.target.value)} placeholder='Profile pic URL (optional)' type='email'/>\n          <input value={email} onChange={e => setEmail(e.target.value)} placeholder='Email' type='email'/>\n          <input value={password} onChange={e => setPassword(e.target.value)} placeholder='Password' type='password'/>\n          <button type='submit' onClick={loginToApp} >Sign-In</button>\n      </form>\n\n      <p>\n          Not a member? {' '}\n          <span className='login_register' onClick={register}>\n            Create an Account</span>\n      </p>\n    </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport './HeaderOption.css'\nimport { Avatar } from '@material-ui/core'\nimport { selectUser } from './features/userSlice';\nimport { useSelector } from 'react-redux';\n\nfunction HeaderOption({avatar, Icon, title, onClick}) {\n    \n    const user = useSelector(selectUser); \n\n    return (\n        <div onClick={onClick} className='headerOption'>\n            {Icon && <Icon className='headerOption_icon' />}\n            {avatar && (\n            <Avatar className='headerOption_icon'>{user?.displayName[0]}</Avatar>)}\n            <h3 className='headerOption_title'>{title}</h3>\n        </div>\n    );\n}\n\nexport default HeaderOption\n//pass an icon and text to header icons\n//props=properties=allows us to reuse HeaderOption\n// allows me to customize certain parts of that component over and over","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport './Header.css'\nimport SearchIcon from '@material-ui/icons/Search';\nimport HeaderOption from './HeaderOption';\nimport HomeIcon from '@material-ui/icons/Home'\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { auth } from './Firebase';\nimport { logout } from './features/userSlice';\n\n\nfunction Header() { \n    const dispatch = useDispatch();\n\n    const logoutOfApp = () => {\n      dispatch(logout())\n      auth.signOut();\n    }\n\n    return (\n        <div className='header'>\n\n            <div className='header_left'>\n                <img src='http://www.flaticon.com/svg/static/icons/svg/174/174857.svg' alt=''/>\n\n                <div className=\"header_search\">\n                    <SearchIcon />\n                    <input placeholder='Search' type='text' />\n                </div>\n                \n            </div>\n            <div className='header_right'>\n                <HeaderOption Icon={HomeIcon} title='Home'/>\n                <HeaderOption Icon={SupervisorAccountIcon} title='My Network'/>\n                <HeaderOption Icon={BusinessCenterIcon} title='Jobs'/>\n                <HeaderOption Icon={ChatIcon} title='Chat'/>\n                <HeaderOption Icon={NotificationsIcon} title='Notifications'/>\n                <HeaderOption avatar={true} title='Logout' onClick={logoutOfApp}/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Header\n","import React from 'react'\nimport './Sidebar.css'\nimport { Avatar } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from './features/userSlice'\n\nfunction Sidebar() {\n    // access user information\n    const user = useSelector(selectUser); \n\n    const recentItem = (topic) => (\n        <div className='sidebar_recentItem'>\n            <span className='sidebar_hash'>#</span>\n            <p>{topic}</p>\n        </div>\n    )\n    return (\n        <div className='sidebar'>\n            <div className='sidebar_top'>\n                <img src='https://i.stack.imgur.com/vhoa0.jpg' alt='' />\n                {/* if user does not have an image we can render the first initial of their name */}\n                <Avatar src={user.photoURL} className='sidebar_avatar'>{user?.displayName[0]}</Avatar>\n                <h3>{user.displayName}</h3>\n                <h5>{user.email}</h5>\n            </div>\n\n            <div className='sidebar_stats'>\n                <div className='sidebar_stat'>\n                    <p>Who viewed you?</p>\n                    <p className='sidebar_statNumber'>1.4M</p>\n                </div>\n                <div className='sidebar_stat'>\n                    <p>Views on post</p>\n                    <p className='sidebar_statNumber'>1.4M</p>\n                </div>\n            </div>\n\n            <div className='sidebar_bottom'>\n                <p>Recent</p>\n                {recentItem ('linkedIn clone')}\n                {recentItem ('ReactJS')}\n                {recentItem ('MiniSynth')}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport './InputOption.css'\n\nfunction InputOption({Icon, title, color}) {\n    return (\n    <div  className='inputOption'>\n        <Icon style={{color:color}} />\n        <h4>{title}</h4>\n    </div>\n    );\n}\n\nexport default InputOption","import React, { forwardRef } from 'react'\nimport { Avatar } from '@material-ui/core'\n// CSS\nimport './Post.css'\n// Components\nimport InputOption from './InputOption'\n// Icons from Material Icons\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport ShareIcon from '@material-ui/icons/Share';\nimport SendIcon from '@material-ui/icons/Send';\n\n\nconst Post = forwardRef(({ name , description, message, photoURL}, ref) => {\n\n    return (\n    <div ref={ref} className='post'>\n        <div className='post_header'>\n            <Avatar src={photoURL}>{name[0]}</Avatar>\n            <div className='post_info'>\n                <h2>{name}</h2>\n                <p>{description}</p>\n            </div>    \n        </div> \n        <div className='post_body'>\n            <p>{message}</p>\n        </div>   \n\n        <div className='post_buttons'>\n            <InputOption Icon={ThumbUpAltIcon} title='Like' color='gray'/>\n            <InputOption Icon={ChatIcon} title='Comment' color='gray'/>\n            <InputOption Icon={ShareIcon} title='Share' color='gray'/>\n            <InputOption Icon={SendIcon} title='Send' color='gray'/>\n        </div>    \n    </div>\n    )\n})\n\nexport default Post\n","import React, { useEffect, useState } from 'react'\nimport FlipMove from 'react-flip-move'\nimport './Feed.css'\nimport InputOption from './InputOption'\nimport CreateIcon from '@material-ui/icons/Create';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport Post from './Post';\n// import db from local db\nimport { db } from './Firebase'\nimport Firebase from './Firebase'\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\n\n// useState = Hook // RE-EXPLAIN 2:20\nfunction Feed() {\n const user = useSelector(selectUser);\n const [input, setInput] = useState('');\n const [posts, setPosts] = useState([]);\n \n //! useEffect hook allows us to fire off code when the Feed component loads. \n //! It also allows us to fire off whatever the component re-renders if we don't pass a second argument.\n //! If we pass on a blank dependency like [empty array] in line 21, then it will fire off once the feed component loads but it will never fire off again after that \n useEffect(() => {\n    db.collection('posts')\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => \n        setPosts(\n            snapshot.docs.map((doc) => ({\n                id: doc.id,\n                data: doc.data(),\n            }))\n        )\n    );//real time posts collection when posts are add/deleted\n}, []);\n\n\n    // prevent refreshing\n    const sendPost = e => {\n        e.preventDefault();\n        db.collection('posts').add({\n            name: user.displayName,\n            description: user.email,\n            message: input,\n            photoURL: user.photoUrl || '',\n            timestamp: Firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setInput('');\n    };\n\n    return <div className='feed'>\n        <div className='feed_inputContainer'>\n            <div className=\"feed_input\">\n                <CreateIcon />\n                <form>\n                    <input value={input} onChange={e => setInput(e.target.value)} type='text' />\n                    <button onClick={sendPost} type='submit'>Send</button>\n                </form>\n            </div>\n            <div className='feed_inputOptions'>\n                <InputOption Icon={ImageIcon} title='Photo' color='#70B5F9' />\n                <InputOption Icon={SubscriptionsIcon} title='Video' color='#E7A33E' />\n                <InputOption Icon={EventNoteIcon} title='Event' color='#70B5F9' />\n                <InputOption \n                 Icon={CalendarViewDayIcon}\n                 title='Write article'\n                 color= '#7FC15E' />\n            </div>\n        </div>\n\n        {/* Posts */}\n        <FlipMove>\n        {/* every time I have a post I render it on the browser */}\n        {posts.map(({id, data: {name, description, message, photoURL}}) => (\n            <Post \n                key={id}\n                name={name}\n                description={description}\n                message={message}\n                photoURL={photoURL}\n            />\n        ))}\n        </FlipMove>\n        </div>\n}\n\nexport default Feed\n","import React from 'react'\n// CSS\nimport './Widgets.css'\n// Icons from Material.ui\nimport InfoIcon from '@material-ui/icons/Info';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nfunction Widgets() {\n\n    const newsArticle = (heading, subtitle) => (\n        <div className='widgets_article'>\n            <div className='widgets_articleLeft'>\n                <FiberManualRecordIcon />\n            </div>\n\n            <div className='widgets_articleRight'>\n                <h4>{heading}</h4>\n                <p>{subtitle}</p>\n            </div>\n        </div>\n    )\n\n    return (\n        <div className='widgets'>\n            <div className='widgets_header'>\n                <h2>LinkedIn News</h2>\n                <InfoIcon />\n            </div>\n            {newsArticle('Saras First React', 'Top news')}\n            {newsArticle('Saras First React', 'Top news')}\n            {newsArticle('Saras First React', 'Top news')}\n        </div>\n    )\n}\n\nexport default Widgets\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport './App.css';\r\nimport Login from './Login'\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport Feed from './Feed'\r\nimport Widgets from './Widgets'\r\n//\r\nimport { login, logout, selectUser } from './features/userSlice';\r\nimport { auth } from './Firebase'\r\n\r\nfunction App() {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch(); \r\n\r\n    useEffect(() => {\r\n      auth.onAuthStateChanged((userAuth) => {\r\n        if (userAuth) {\r\n          // user is logged in\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName,\r\n            photoUrl: userAuth.photoURL, \r\n        })\r\n        );\r\n        } else {\r\n          // user is logged out\r\n        dispatch(logout());\r\n      }\r\n    });\r\n    }, []);\r\n    \r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n{/* if there is no user render Login otherwise render the app */}\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className='app_body'>\r\n        <Sidebar />\r\n          <Feed />\r\n          <Widgets />\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}