{"version":3,"sources":["Firebase.js","features/userSlice.js","Login.js","HeaderOption.js","Header.js","Sidebar.js","InputOption.js","components/LikeButton.js","Post.js","Feed.js","Widgets.js","Likes.js","Settings.js","app/App.js","app/store.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","deleteUser","actions","selectUser","Login","useState","setName","profilePic","setProfilePic","email","setEmail","password","setPassword","dispatch","useDispatch","className","src","alt","value","onChange","e","target","placeholder","type","onClick","preventDefault","signInWithEmailAndPassword","then","userAuth","uid","displayName","photoUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","HeaderOption","avatar","Icon","title","useSelector","Avatar","Header","to","HomeIcon","FavoriteBorderIcon","SettingsIcon","signOut","Sidebar","recentItem","topic","href","InputOption","color","style","LikeButton","id","likeStatus","likes","setLikes","userId","console","log","likedPost","collection","doc","update","FieldValue","arrayRemove","arrayUnion","ThumbUpAltIcon","Post","forwardRef","ref","description","message","ChatIcon","ShareIcon","SendIcon","Feed","input","setInput","posts","setPosts","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","add","timestamp","Firebase","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","includes","Widgets","newsArticle","heading","subtitle","Likes","where","Settings","connect","profile","App","onAuthStateChanged","exact","path","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e1cdce92.chunk.js","sourcesContent":["// First, install 'npm add firebase' firebase is a dependency (API)\n// let's copy paste our firebase config\nimport firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyABlexnsrKC3x9R4rMj_gl7ZLOKF_EjHRs\",\n    authDomain: \"photo-app-clone.firebaseapp.com\",\n    projectId: \"photo-app-clone\",\n    storageBucket: \"photo-app-clone.appspot.com\",\n    messagingSenderId: \"763322424128\",\n    appId: \"1:763322424128:web:17654c866d32fa645638a5\",\n    measurementId: \"G-LRM78XGGSP\"\n  };\n\n//! the following 'firebaseApp' connects/sets up our firebase to our db in the cloud\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n//! gives access to firebase database and 'db' variable is accessible through my app\nconst db = firebaseApp.firestore();\n//! gives access to firebase authentication i.e. 'login support' also accessible throughout my app\nconst auth = firebase.auth();\n\n//! exporting makes them accessible \nexport { db, auth };\nexport default firebase","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null\r\n  },\r\n  // my actions(state, action)\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n    deleteUser: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout, deleteUser} = userSlice.actions;\r\n\r\n//! Selectors\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.user.value)`\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n\r\n//! Redux:\r\n// REWATCH 2:30 REDUX BROKEN DOWN! Take notes and articulate this! i.e.SLICE\r\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { auth } from './Firebase';//config\nimport { login } from './features/userSlice'\nimport './Login.css'\n\nfunction Login() {\n  //! creating consts that I will patch into each input field\n    const [name, setName] = useState('');\n    const [profilePic, setProfilePic] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n    // const [name, setName] = useState(''); for registering\n\n    const loginToApp = (e) => {\n        e.preventDefault();\n        auth.signInWithEmailAndPassword(email, password)\n          .then(userAuth => {\n             dispatch(\n               login({\n                 email: userAuth.user.email,\n                 uid: userAuth.user.uid,\n                 displayName: userAuth.user.displayName,\n                 photoUrl: userAuth.user.photoURL \n             })\n            );\n         })\n         .catch((error) => alert(error));\n    };\n    const register = () => {\n        if(!name){\n            return alert(\"Please enter full name\");\n        }\n//!importing auth var from firebase.js using a firebase function directly to email and password which will be created in the backend, firebase db\n        auth.createUserWithEmailAndPassword(email, password).then(\n    //! If successfully creates user, update user profile based on user input\n            (userAuth) => {\n              userAuth.user\n                .updateProfile({\n          //! displayName/photoURL are KEYS in Firebase, name/profilePic are local info\n                 displayName: name,\n                 photoURL: profilePic,\n              })\n              .then(() => {\n        //! dispatch is now pushing the user into Firebase db with Redux hook, useDispatch imported above\n                        //! 'login action' from userSlice returns user object of the following,\n                dispatch(login({\n                    email: userAuth.user.email,\n                    uid: userAuth.user.uid,\n                    displayName: name,\n                    photoUrl: profilePic    \n                }));\n            });\n        // function that alerts us if there is any error rendering above information\n        }).catch(error => alert(error));\n    };\n    \n    return (\n    <div className='login'>\n      <img src='https://images.unsplash.com/photo-1525093485273-34834413e1ba?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1950&q=80' alt='Jazz'\n        /> \n    \n      <form>\n          {/* Pulling in my const lines 8-11 to login user */}\n          <input value={name} onChange={e => setName(e.target.value)} placeholder='Full Name' type='text'/>\n          <input value={profilePic} onChange={e => setProfilePic(e.target.value)} placeholder='Profile pic URL (optional)' type='email'/>\n          <input value={email} onChange={e => setEmail(e.target.value)} placeholder='Email' type='email'/>\n          <input value={password} onChange={e => setPassword(e.target.value)} placeholder='Password' type='password'/>\n          <button type='submit' onClick={loginToApp} >Sign-In</button>\n      </form>\n\n      <p>\n          Not a member? {' '}\n          {/* Pulling the const line 31 to create a new user */}\n          <span className='login_register' onClick={register}>\n            Create an Account</span>\n      </p>\n    </div>\n    \n    )\n}\n\nexport default Login\n","import React from 'react'\nimport './HeaderOption.css'\nimport { Avatar } from '@material-ui/core'\nimport { selectUser } from './features/userSlice';\nimport { useSelector } from 'react-redux';\n\nfunction HeaderOption({avatar, Icon, title, onClick}) {\n    \n    const user = useSelector(selectUser); \n\n    return (\n        <div onClick={onClick} className='headerOption'>\n            {/* If I pass in an Icon only then should I render the <Icon/> itself as a component  */}\n            {Icon && <Icon className='headerOption_icon' />}\n            {/* If I pass in an avatar only then should I render the <Avatar/> itself as a component  */}\n            {avatar && ( \n                                                // !\n            <Avatar className='headerOption_icon' src={user?.photoUrl}>{user?.displayName[0]}</Avatar>)}\n            <h3 className='headerOption_title'>{title}</h3>\n        </div>\n    );\n}\n\nexport default HeaderOption\n// pass an icon and text to header icons\n// props=properties=allows us to reuse HeaderOption\n// allows me to customize certain parts of that component over and over","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n// CSS\nimport './Header.css'\n// MUI\nimport SearchIcon from '@material-ui/icons/Search';\nimport HeaderOption from './HeaderOption';\nimport HomeIcon from '@material-ui/icons/Home'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport SettingsIcon from '@material-ui/icons/Settings';\n// import NotificationsIcon from '@material-ui/icons/Notifications';\n// Firebase\nimport { auth } from './Firebase';\nimport { logout } from './features/userSlice';\n\n\nfunction Header() { \n    const dispatch = useDispatch();\n//! dispatch logout action on avatar line 49\n    const logoutOfApp = () => {\n      dispatch(logout())\n      //! another firebase function signOut()\n      auth.signOut();\n    }\n\n    return (\n        <div className='header'>\n\n            <div className='header_left'>\n                <img src='https://images.unsplash.com/photo-1555552855-44331d696762?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1650&q=80' alt=''/>\n\n                <div className=\"header_search\">\n                    <SearchIcon />\n                    <input placeholder='Search' type='text' />\n                </div>\n                \n            </div>\n            <div className='header_right'>\n                <NavLink to='/'>\n                    <HeaderOption Icon={HomeIcon} title='Home' />\n                </NavLink>\n                <NavLink to='/Likes'>\n                    <HeaderOption Icon={FavoriteBorderIcon} title='My Likes'/>\n                </NavLink>\n                <NavLink to='/Settings'>\n                <HeaderOption Icon={SettingsIcon} title='Settings'/>\n                </NavLink>\n                {/* <HeaderOption Icon={NotificationsIcon} title='Notifications'/> */}\n                <HeaderOption avatar={true} title='Logout' onClick={logoutOfApp}/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Header\n","import React from 'react'\nimport './Sidebar.css'\nimport { Avatar } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from './features/userSlice'\n\nfunction Sidebar() {\n    // access user information\n    const user = useSelector(selectUser); \n\n    // Render JSX in the \"recents' section with this function bypassing a need for another component\n    const recentItem = (topic) => (\n        <div className='sidebar_recentItem'>\n            <span className='sidebar_hash'>#</span>\n            <p>{topic}</p>\n        </div>\n    )\n    return (\n        <div className='sidebar'>\n            <div className='sidebar_top'>\n                <img src='https://www.teahub.io/photos/full/13-137497_this-high-quality-free-png-image-without-any.jpg' alt='' />\n                {/* if user does not have an image we can render the first initial of their name */}\n                <Avatar src={user.photoUrl} className='sidebar_avatar'>{ user?.displayName[0]}</Avatar>\n                <h3>{user.displayName}</h3>\n                <h5>{user.email}</h5>\n            </div>\n\n            <div className='sidebar_stats'>\n                <div className='sidebar_stat'>\n                    <p>Who viewed you?</p>\n                    <p className='sidebar_statNumber'>1.4M</p>\n                </div>\n                <div className='sidebar_stat'>\n                    <p>Views on post</p>\n                    <p className='sidebar_statNumber'>1.4M</p>\n                </div>\n            </div>\n\n            <div className='sidebar_bottom'>\n                <p>Recent</p>\n                <a href='https://photo-app-clone.web.app/'target=\"_blank\">{recentItem ('PhotoApp')}</a>\n                <a href='https://mini-synth.herokuapp.com//'target=\"_blank\">{recentItem ('MiniSynth')}</a>\n                <a href='https://www.linkedin.com/in/scristalp/'target=\"_blank\">{recentItem ('LinkedIn Profile')}</a>\n                <a href='https://github.com/saracpena'target=\"_blank\">{recentItem ('GitHub')}</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport './InputOption.css'\n\n// Decided to De-structure properties vs props.Icon etc.\nfunction InputOption({Icon, title, color}) {\n\n    return (\n    <div  className='inputOption'>\n        {/* inline styling, we will pass this prop to Feed.js Icons  */}\n        {/* i.e. <InputOption Icon={ImageIcon} title='Photo' color='#70B5F9' /> */}\n        <Icon style={{color:color}} />\n        <h4>{title}</h4>\n    </div>\n    );\n}\n//inputOption on post text box, Photo, Video, Event, Write Article to be imported into Feed.js\nexport default InputOption","import { ColorizeSharp } from '@material-ui/icons';\nimport React, { useState } from 'react'\nimport InputOption from '../InputOption'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/userSlice';\nimport firebase from '../Firebase'\nimport { db } from '../Firebase'\nimport { auth } from '../Firebase';\n\nfunction LikeButton({ id, likeStatus }){\n    \nconst [likes, setLikes] = useState(likeStatus)\nconst userId = useSelector(selectUser).uid;\nconsole.log('In like btn', likeStatus);\n\nconst toggleLike = () => {\n    console.log('toggleLike');\n    console.log('AddRemoveLike', userId);\n    console.log(id);\nconst likedPost = db.collection('posts').doc(id);\n    if(!likes){\n        likedPost.update({\n        likes: firebase.firestore.FieldValue.arrayUnion(userId)\n        })\n    console.log();\n    }else {\n        likedPost.update({\n        likes: firebase.firestore.FieldValue.arrayRemove(userId)\n        })\n    }\nconsole.log(likedPost);\n    setLikes(!likes)\n}\n\nconst color = likes ?'blue':'grey';\n\n       return (\n            <div className='like-btn' onClick={toggleLike}> \n                <InputOption Icon={ThumbUpAltIcon} title='Like' color={color}/> \n            </div>\n          ) \n    }\nexport default LikeButton\n","import React, { forwardRef } from 'react'\n// CSS\nimport './Post.css'\n// Components\nimport InputOption from './InputOption'\nimport LikeButton from './components/LikeButton'\n// Icons from Material Icons\nimport { Avatar } from '@material-ui/core'\n\nimport ChatIcon from '@material-ui/icons/Chat';\nimport ShareIcon from '@material-ui/icons/Share';\nimport SendIcon from '@material-ui/icons/Send';\n\n// destructured props here and with forwardRef allows Parent component to pass ref to children,\nconst Post = forwardRef(({ id, name , description, message, photoURL, likeStatus }, ref) => {\n\n    return (\n    <div ref={ref} className='post'>\n        <div className='post_header'>\n            <Avatar src={photoURL}>{name[0]}</Avatar>\n            <div className='post_info'>\n                {/* went from hard coding props to passing props from db */}\n                <h2>{name}</h2>\n                <p>{description}</p>\n            </div>    \n        </div> \n        <div className='post_body'>\n            <p>{message}</p>\n        </div>   \n\n        <div className='post_buttons'>\n            {/* Here I am reusing InputOption component that I created for Header.js  */}\n            {/* used flex in CSS to render across instead of top to bottom */}\n            <LikeButton id={id} likeStatus={likeStatus} />\n            <InputOption Icon={ChatIcon} title='Comment' color='gray'/>\n            <InputOption Icon={ShareIcon} title='Share' color='gray'/>\n            <InputOption Icon={SendIcon} title='Send' color='gray'/>\n        </div>    \n    </div>\n    )\n})\n\nexport default Post\n","import React, { useEffect, useState } from 'react'\n// React Animation\nimport FlipMove from 'react-flip-move'\nimport './Feed.css'\nimport InputOption from './InputOption'\nimport CreateIcon from '@material-ui/icons/Create';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Post from './Post';\n// import db from local db\nimport { db } from './Firebase'\nimport Firebase from './Firebase'\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\n\n// useState = Hook // RE-EXPLAIN 2:20\nfunction Feed() {\n const user = useSelector(selectUser); //!Line 28 in userSlice - recieves its redux state as its argument\n// Declaring state: capturing input and posts, for every variable I create using 'State' will come with a set of functions  \n// setInput and setPosts changes input and posts using = 'useState'\n// thus making the following a hook,\n const [input, setInput] = useState('');\n const [posts, setPosts] = useState([]);\nconsole.log('posts', posts);\n \n //! useEffect is a hook function inside ReactJS that takes another function in its first param\n //! that will \"DO\" things every time something changes.\n //! What determines WHEN we call this function is we pass an array of properties i.e. all our dependencies. \n //! So anytime this array changes we run useEffect() line 48\n useEffect(() => {\n// importing db from local which was created as a variable in firebase.js\n    db.collection('posts')\n      .orderBy('timestamp', 'desc')\n    //! onSnapshot = a real-time 'listener' connection to the db of the \"Posts collection\" i.e. stored posts when user creates a new post.\n    //! and any time posts change (deleted/edited/etc) it will gives us a snapShot\n      .onSnapshot((snapshot) => \n      //! anytime posts change I will update the state with following,\n        setPosts(\n        //! in my collection I have 'doc' that I am iterating through and returning an object of id and data\n        //! following is directly mapped to my posts line 25 [posts, setPosts function as created here]\n        //! useState makes updates\n            snapshot.docs.map((doc) => ({\n                id: doc.id,\n                data: doc.data(),\n            }))\n        )\n    );\n}, []);\n\n// preventDefault to keep from refreshing after typing text\n const sendPost = e => {\n    e.preventDefault();\n    // which are stored in JSON format\n    //! I am pushing (w/ the add ()) data collected from user into my db (firestore) through the post we are 'listening' to in line 32\n        db.collection('posts').add({\n            name: user.displayName,\n            description: user.email,\n            // does this 'likes array' actually makes sense here?\n            likes:[],\n            message: input,\n            photoURL: user.photoUrl || '',\n            //! timestamp makes it so all posts show up in the same 'timestamp' regardless of timezone/region --'serverTimestamp()\n            timestamp: Firebase.firestore.FieldValue.serverTimestamp()\n        })\n        //! This will CLEAR our input once we've created a post!\n        setInput('');\n    };\n\n    return <div className='feed'>\n        <div className='feed_inputContainer'>\n            <div className=\"feed_input\">\n                <CreateIcon />\n                <form>\n                    {/* we must add onChange because line 23 has empty string, thus it is infinitely cycling and it will not allow user to create a post without this functionality*/}\n                    <input value={input} onChange={e => setInput(e.target.value)} type='text' placeholder='Share a post'/>\n                    <button onClick={sendPost} type='submit'>Send</button>\n                </form>\n            </div>\n            <div className='feed_inputOptions'>\n                {/* Here I am reusing InputOption component that I created for Header.js  */}\n                <InputOption Icon={ImageIcon} title='Photo' color='#70B5F9' />\n                <InputOption Icon={SubscriptionsIcon} title='Video' color='#E7A33E' />\n                <InputOption Icon={EventNoteIcon} title='Event' color='#70B5F9' />\n            </div>\n        </div>\n\n        {/* Posts will be rendered here as they come in with an animation 'FlipMove' */}\n        <FlipMove>    \n        {/* every time I have a post I render it on the browser and I also de-structured the post itself extracting each prop */}\n        {posts.map(({id, data: {name, description, likes, message, photoURL}}) => {\n         const likeStatus =(likes || []).includes(user.uid);\n           return(\n           <Post \n                //! KEYS are important when rendering lists. Without them React will re-render existing data while rendering\n                //! new data. This way, existing data remains, and the only thing rendering is NEW DATA.\n                key={id}\n// https://reactjs.org/warnings/special-props.html#:~:text=Most%20props%20on%20a%20JSX,not%20forwarded%20to%20the%20component\n                id={id}\n                name={name}\n                likeStatus={likeStatus}\n                description={description}\n                likes={likes}\n                message={message}\n                photoURL={photoURL}\n            />)\n        })}\n        </FlipMove>\n        </div>\n}\n\nexport default Feed\n","import React from 'react'\n// CSS\nimport './Widgets.css'\n// Icons from Material.ui\nimport InfoIcon from '@material-ui/icons/Info';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nfunction Widgets() {\n\n    const newsArticle = (heading, subtitle) => (\n        <div className='widgets_article'>\n            <div className='widgets_articleLeft'>\n                <FiberManualRecordIcon />\n            </div>\n\n            <div className='widgets_articleRight'>\n                <h4>{heading}</h4>\n                <p>{subtitle}</p>\n            </div>\n        </div>\n    )\n\n    return (\n        <div className='widgets'>\n            <div className='widgets_header'>\n                <h2>Venues</h2>\n                <InfoIcon />\n            </div>\n            {newsArticle('Saras First React', 'Top news')}\n            {newsArticle('The Blue Note', 'Top news')}\n            {newsArticle('Carnegie Hall', 'Top news')}\n        </div>\n    )\n}\n\nexport default Widgets\n","import React, { useState, useEffect } from 'react'\n// React Animation\nimport FlipMove from 'react-flip-move'\n// CSS\nimport './Likes.css'\n\n// import db from local db\nimport Post from './Post'\nimport { db } from './Firebase'\nimport Firebase from './Firebase'\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\n\n\nconst Likes = () => {\n    //! instead of using class component I used a function component and used useState to hook it to\n    // class Likes extends React.Component {\n    //     constructor(props) {\n    //       super(props);\n    //       this.state = {\n    //         posts,\n    //         userId\n    //       };\n    //     }\n\n// const user = useSelector(selectUser);\nconst [posts, setPosts] = useState([]);\nconst userId = useSelector(selectUser).uid;\n\nuseEffect(() => {\n    db.collection('posts')\n      .where('likes','array-contains', userId)\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => \n        setPosts(\n            snapshot.docs.map((doc) => ({\n                id: doc.id,\n                data: doc.data(),\n            }))\n        )\n    );//real time posts collection when posts are add/deleted\n}, []);\n\n// Query db firestore of UIDs get all posts that have current users UID in their likes array\n\n\n    \n    return (\n        <div className='likes-navlink'>\n         <div className='feed_inputContainer'>Some of my Favorite Posts</div>\n            <div className=\"feed_input\"></div>\n            <FlipMove>\n            {posts.map(({id, data: {name, description, likes, message, photoURL}}) => {\n            const likeStatus =(likes || []).includes(userId);\n            return (\n            <Post \n                key={id}\n// https://reactjs.org/warnings/special-props.html#:~:text=Most%20props%20on%20a%20JSX,not%20forwarded%20to%20the%20component\n                id={id}\n                name={name}\n                likeStatus={likeStatus}\n                description={description}\n                likes={likes}\n                message={message}\n                photoURL={photoURL}\n            />)\n        })}\n            <div className='feed_inputOptions'></div>\n        </FlipMove>\n        </div>\n    )\n}\n\nexport default Likes\n","import { CallToActionSharp } from '@material-ui/icons';\n// CSS\nimport './Settings.css'\n// React Redux\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { firestore } from 'firebase'\n\nfunction Settings() {\nconnect(\n    // Map to props\n    ({firebase: { auth, profile }}) => ({\n        auth,\n        profile\n    })\n)\n// export const deleteUser = () => async (\n//     dispatch, \n//     getState, \n//     {getFirebase, getFirestore} \n//     => {\n//     const firebase = getFirebase();\n//     const firestore = getFirestore();\n\n//     try {\n\n//     }catch(err) {\n//        dispatch(type: actions.deleteUser)\n//     }\n// });\n\n// user.delete().then(){\n    \n// }\n\n    return (\n        <div className='updateprofile'>\n        <img src='' alt=''/> \n        <p className='heading'>U P D A T E &nbsp; P R O F I L E</p>\n        <form className='form'>\n            <input  placeholder='Full Name' type='email'/>\n            <input placeholder='Profile pic URL (optional)' type='email'/>\n            <input  placeholder='Email' type='email'/>\n            <input  placeholder='Password' type='password'/>\n            <button type='submit' >Delete Account</button>\n        </form>\n      </div>\n    )\n}\n\nexport default Settings\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch as RouterSwitch, Route } from 'react-router-dom'\r\n//CSS\r\nimport './App.css';\r\n// Components\r\nimport Login from '../Login'\r\nimport Header from '../Header';\r\nimport Sidebar from '../Sidebar';\r\nimport Feed from '../Feed'\r\nimport Widgets from '../Widgets'\r\nimport Likes from '../Likes'\r\nimport Settings from '../Settings';\r\n//\r\nimport { login, logout, selectUser } from '../features/userSlice';\r\nimport { auth } from '../Firebase'\r\n\r\n\r\n\r\nfunction App() {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch(); \r\n\r\n    useEffect(() => {\r\n//! onAuth() is a firebase () 'listener' that listens to any authentication changes\r\n      auth.onAuthStateChanged((userAuth) => {\r\n        if (userAuth) {\r\n          // then the user is logged in\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName,\r\n            photoUrl: userAuth.photoURL, \r\n        })\r\n        );//! Otherwise, the user is logged out\r\n        } else {\r\n          \r\n    //! dispatching reducer from userSlice.js\r\n        dispatch(logout());\r\n      }\r\n    });\r\n    }, []);\r\n    \r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n      <Header />\r\n{/* TERNARY !user ? :Login- ----if there is no user, I want to render the Login page, otherwise render the app */}\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className='app_body'>\r\n        <Sidebar />  \r\n      <RouterSwitch>\r\n          <Route exact path='/'>\r\n            <Feed />\r\n          </Route>\r\n          <Route path='/Likes'>\r\n            <Likes />\r\n          </Route>\r\n          <Route>\r\n            <Settings />\r\n          </Route>\r\n      </RouterSwitch>   \r\n          <Widgets />\r\n      </div>\r\n      )}\r\n      </Router>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n// This reducer will handle any user actions like login/logout/delete user etc.\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}